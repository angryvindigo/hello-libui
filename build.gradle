plugins {
    id "kotlin-multiplatform" version "1.3.20-eap-100"
}

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/msink/kotlin-dev' }
    jcenter()
}

final def os = org.gradle.internal.os.OperatingSystem.current()

def resourcesDirectory = "$projectDir/src/nativeMain/resources"
def windowsResources = "$buildDir/resources/hello.res"

task compileWindowsResources(type: Exec) {
    onlyIf { os.isWindows() }

    def konanUserDir = System.getenv("KONAN_DATA_DIR") ?: "${System.getProperty("user.home")}/.konan"
    def konanLLVMDir = "${konanUserDir}/dependencies/msys2-mingw-w64-x86_64-gcc-7.3.0-clang-llvm-lld-6.0.1/bin"
    def rcFile = file("${resourcesDirectory}/hello.rc")

    inputs.file rcFile
    outputs.file file(windowsResources)
    commandLine 'cmd', '/c', 'windres', rcFile, '-O', 'coff', '-o', windowsResources
    environment 'PATH', "c:/msys64/mingw64/bin;${konanLLVMDir};${System.getenv('PATH')}"
}

kotlin {
    final def nativePreset = os.isWindows() ? presets.mingwX64
            : os.isLinux()   ? presets.linuxX64
            : os.isMacOsX()  ? presets.macosX64
            : /*unknown host*/ null
    targets.fromPreset(nativePreset, 'native') {
        binaries {
            executable([DEBUG]) {
                if (os.isWindows()) {
                    tasks.compileKotlinNative.dependsOn compileWindowsResources
                    linkerOpts "$windowsResources -mwindows"
                }
            }
        }
    }
}

dependencies {
    nativeMainImplementation 'com.github.msink:libui:0.2.0-dev'
}
