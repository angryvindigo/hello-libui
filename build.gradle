plugins {
    id "org.jetbrains.kotlin.multiplatform" version "1.3.10"
}

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/msink/kotlin-native" }
}

final def os = org.gradle.internal.os.OperatingSystem.current()

def resourcesDirectory = "$projectDir/src/nativeMain/resources"
def windowsResources = "$buildDir/resources/hello.res"

task compileWindowsResources(type: Exec) {
    onlyIf { os.isWindows() }

    def konanUserDir = System.getenv("KONAN_DATA_DIR") ?: "${System.getProperty("user.home")}/.konan"
    def konanLLVMDir = "${konanUserDir}/dependencies/msys2-mingw-w64-x86_64-gcc-7.3.0-clang-llvm-lld-6.0.1/bin"
    def rcFile = file("${resourcesDirectory}/hello.rc")

    inputs.file rcFile
    outputs.file file(windowsResources)
    commandLine 'cmd', '/c', 'windres', rcFile, '-O', 'coff', '-o', windowsResources
    environment 'PATH', "c:/msys64/mingw64/bin;${konanLLVMDir};${System.getenv('PATH')}"
}

kotlin {
    final def nativePreset = os.isWindows() ? presets.mingwX64
            : os.isLinux()   ? presets.linuxX64
            : os.isMacOsX()  ? presets.macosX64
            : /*unknown host*/ null
    targets {
        fromPreset(nativePreset, 'native') {
            compilations.main {
                outputKinds 'executable'
                if (os.isWindows()) {
                    linkerOpts "$windowsResources -mwindows"
                }
            }
        }
    }
}

dependencies {
    nativeMainImplementation 'com.github.msink:libui:0.1.0'
}

tasks.compileKotlinNative.dependsOn compileWindowsResources

task runProgram {
    def buildType = 'DEBUG' // 'RELEASE'
    def target = kotlin.targets.find {
        it instanceof org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget && it.publishable
    }

    dependsOn target.compilations.main.linkTaskName('EXECUTABLE', buildType)

    doLast {
        exec {
            executable target.compilations.main.getBinary('EXECUTABLE', buildType)
        }
    }
}
